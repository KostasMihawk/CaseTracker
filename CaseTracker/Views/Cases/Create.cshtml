@using App_LocalResources
@model CaseTracker.ViewModels.CreateCaseViewModel

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Case</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<section>

		<div class="form-group">
			@Html.LabelFor(model => model.Aa, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Aa, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Aa, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DocumentTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.DocumentTypeId, new SelectList(Model.DocumentTypesList, "Id", "Description"), "", new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.DocumentTypeId, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DeedResultId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(m => m.DeedResultId, new SelectList(Model.DeedResultList, "Id", "Result"), "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.DeedResultList, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DateOfDeed, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateOfDeed, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateOfDeed, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(m => m.ZoneId, new SelectList(Model.ZoneList, "Id", "Name"), "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ZoneList, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.IsFinished, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.IsFinished, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.IsFinished, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DateOfAssignment, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateOfAssignment, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateOfAssignment, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DateOfSubmission, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateOfSubmission, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateOfSubmission, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.DateOfEnd, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateOfEnd, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateOfEnd, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
			</div>
		</div>

	</section>

	<section>

		<div class="form-group" id="CourtNameInput">
			@Html.LabelFor(model => model.CourtName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.CourtName, new { htmlAttributes = new { @class = "form-control", id = "courtName" } })
				@Html.ValidationMessageFor(model => model.CourtName, "", new { @class = "text-danger" })
				<button class="newCourtButton btn btn-info">@GlobalRes.click_to_select_an_existing @GlobalRes.Court</button>
			</div>

		</div>

		@Html.Hidden("newCourt", "true", new { id = "newCourtValue" })

		<div class="form-group" id="CourtListInput" style="display:none">
			@Html.LabelFor(model => model.CourtId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.CourtId, new SelectList(Model.CourtsList, "Id", "Name"), "", new { @class = "form-control", id = "courtList" })
				@Html.ValidationMessageFor(model => model.CourtId, "", new { @class = "text-danger" })
				<button class="newCourtButton btn btn-info">@GlobalRes.click_to_type_new @GlobalRes.Court</button>
			</div>
		</div>

	</section>

	<fieldset id="attorneySection">
		<legend>@GlobalRes.Attorney</legend>

		<div class="form-group" id="AttorneyListInput" style="display:none">
			@Html.LabelFor(model => model.AttorneyId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.AttorneyId, new SelectList(Model.AttorneysList, "Id", "FullName"), "", new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.AttorneyId, "", new { @class = "text-danger" })
				<button class="newAttorneyButton btn btn-info">@GlobalRes.click_to_type_new @GlobalRes.Attorney</button>
			</div>
		</div>

		@Html.Hidden("newAttorney", "true", new { id = "newAttorneyValue" })

		<section id="AttorneyInfoInput">

			<div class="form-group">
				@Html.LabelFor(model => model.AttorneyFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.AttorneyFirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AttorneyFirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.AttorneyLastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.AttorneyLastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AttorneyLastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.AttorneyAFM, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.AttorneyAFM, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AttorneyAFM, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.AttorneyCity, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.AttorneyCity, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AttorneyCity, "", new { @class = "text-danger" })
					<button class="newAttorneyButton btn btn-info">@GlobalRes.click_to_select_an_existing @GlobalRes.Attorney</button>
				</div>
			</div>
		</section>
	</fieldset>

	<fieldset id="prosecutionSection">
		<legend>@GlobalRes.Prosecution</legend>

		<div class="form-group" id="ProsecutionListInput" style="display:none">
			@Html.LabelFor(model => model.ProsecutionId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(m => m.ProsecutionId, new SelectList(Model.ProsecutionList, "Id", "FullName"), "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ProsecutionId, "", new { @class = "text-danger" })
				<button class="newProsecutionButton btn btn-info">@GlobalRes.click_to_type_new @GlobalRes.Prosecution</button>
			</div>
		</div>

		@Html.Hidden("newProsecution", "true", new { id = "newProsecutionValue" })

		<section id="ProsecutionInfoInput">
			<div class="form-group">
				@Html.LabelFor(model => model.ProsecutionFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ProsecutionFirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ProsecutionFirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProsecutionLastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ProsecutionLastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ProsecutionLastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ProsecutionFathersName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ProsecutionFathersName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ProsecutionFathersName, "", new { @class = "text-danger" })
					<button class="newProsecutionButton btn btn-info">@GlobalRes.click_to_select_an_existing @GlobalRes.Prosecution</button>
				</div>
			</div>
		</section>
	</fieldset>

	<fieldset id="defenseSection">
		<legend>@GlobalRes.Defense</legend>

		<div class="form-group" id="DefenseListInput" style="display:none">
			@Html.LabelFor(model => model.DefenseId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(m => m.DefenseId, new SelectList(Model.DefenseList, "Id", "FullName"), "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.DefenseId, "", new { @class = "text-danger" })
				<button class="newDefenseButton btn btn-info">@GlobalRes.click_to_type_new @GlobalRes.Defense</button>
			</div>
		</div>

		@Html.Hidden("newDefense", "true", new { id = "newDefenseValue" })

		<section id="DefenseInfoInput">
			<div class="form-group">
				@Html.LabelFor(model => model.DefenseFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DefenseFirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DefenseFirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DefenseLastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DefenseLastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DefenseLastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DefenseFathersName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DefenseFathersName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.DefenseFathersName, "", new { @class = "text-danger" })
					<button class="newDefenseButton btn btn-info">@GlobalRes.click_to_select_an_existing @GlobalRes.Defense</button>
				</div>
			</div>
		</section>
	</fieldset>

	<fieldset id="recipientSection">
		<legend>@GlobalRes.Recipient</legend>

		<div class="form-group" id="RecipientListInput" style="display:none">
			@Html.LabelFor(model => model.RecipientId, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(m => m.RecipientId, new SelectList(Model.RecipientList, "Id", "FullName"), "", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.RecipientId, "", new { @class = "text-danger" })
				<button class="newRecipientButton btn btn-info">@GlobalRes.click_to_type_new @GlobalRes.Recipient</button>
			</div>
		</div>

		@Html.Hidden("newRecipient", "true", new { id = "newRecipientValue" })

		<section id="RecipientInfoInput">
			<div class="form-group">
				@Html.LabelFor(model => model.RecipientFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.RecipientFirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.RecipientFirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.RecipientLastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.RecipientLastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.RecipientLastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.RecipientFathersName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.RecipientFathersName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.RecipientFathersName, "", new { @class = "text-danger" })
					<button class="newRecipientButton btn btn-info">@GlobalRes.click_to_select_an_existing @GlobalRes.Recipient</button>
				</div>
			</div>
		</section>
	</fieldset>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$(document).ready(function () {
			$('.datepicker').datepicker();
		});
	</script>
	<script src="~/Scripts/case/create.js">

	</script>
}
